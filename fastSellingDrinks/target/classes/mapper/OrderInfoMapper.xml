<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nju.fastSellingDrinks.mapper.OrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.nju.fastSellingDrinks.model.OrderInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="logistics_fee" jdbcType="DOUBLE" property="logisticsFee" />
    <result column="product_count" jdbcType="INTEGER" property="productCount" />
    <result column="product_amount_total" jdbcType="DOUBLE" property="productAmountTotal" />
    <result column="order_amount_total" jdbcType="DOUBLE" property="orderAmountTotal" />
    <result column="status" jdbcType="CHAR" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nju.fastSellingDrinks.model.OrderInfo">
    insert into order_info (id, customer_id, order_time, 
      pay_time, logistics_fee, product_count, 
      product_amount_total, order_amount_total, status
      )
    values (#{id,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{orderTime,jdbcType=TIMESTAMP}, 
      #{payTime,jdbcType=TIMESTAMP}, #{logisticsFee,jdbcType=DOUBLE}, #{productCount,jdbcType=INTEGER}, 
      #{productAmountTotal,jdbcType=DOUBLE}, #{orderAmountTotal,jdbcType=DOUBLE}, #{status,jdbcType=CHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.nju.fastSellingDrinks.model.OrderInfo">
    update order_info
    set customer_id = #{customerId,jdbcType=INTEGER},
      order_time = #{orderTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      logistics_fee = #{logisticsFee,jdbcType=DOUBLE},
      product_count = #{productCount,jdbcType=INTEGER},
      product_amount_total = #{productAmountTotal,jdbcType=DOUBLE},
      order_amount_total = #{orderAmountTotal,jdbcType=DOUBLE},
      status = #{status,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, customer_id, order_time, pay_time, logistics_fee, product_count, product_amount_total, 
    order_amount_total, status
    from order_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, customer_id, order_time, pay_time, logistics_fee, product_count, product_amount_total, 
    order_amount_total, status
    from order_info
  </select>
</mapper>